apiVersion : apps/v1
kind: Deployment
metadata:
  name: web-app-frontend
  labels:
    app : web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      project: cia
  template:
    metadata:
      labels:
        project: cia
    spec:
      imagePullSecrets:
        - name: my-registry-key
      containers:
        - name : web-app-frontend
          image: 192.168.20.10:5000/frontend:latest
          ports:
            - containerPort: 8080   # Port on Pod

---
apiVersion : apps/v1
kind: Deployment
metadata:
  name: web-app-backend
  labels:
    app : web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      project: cia
  template:
    metadata:
      labels:
        project: cia
    spec:
      imagePullSecrets:
        - name: my-registry-key
      containers:
        - name : web-app-backend
          image: 192.168.20.10:5000/backend:latest
          ports:
            - containerPort: 5000  # Port on Pod
          env:
            - name: db_root_password
              valueFrom:
                secretKeyRef:
                  name: web-app-mysql
                  key: db_root_password
            - name: db_name
              value: users
---
apiVersion: v1
kind: Service
metadata:
  name: web-app-service
  labels:
     env  : prod
     owner: Pishchanskyi
spec:
  type: NodePort
  selector:
    project: cia
  ports:
    - name      : web-app-front
      protocol  : TCP
      port      : 8080
      nodePort  : 30800
#      targetPort: 80

    - name      : web-app-back
      protocol  : TCP
      port      : 5000
      nodePort  : 30500
#      targetPort: 8080


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapi-deployment
  labels:
    app: flaskapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaskapi
  template:
    metadata:
      labels:
        app: flaskapi
    spec:
      imagePullSecrets:
        - name: my-registry-key
      containers:
        - name: flaskapi
          image: 192.168.20.10:5000/backend:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5000
          env:
            - name: db_root_password
              valueFrom:
                secretKeyRef:
                  name: flaskapi-secrets
                  key: db_root_password
            - name: db_name
              value: flaskapi

---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
spec:
  ports:
  - port: 5000
    protocol: TCP
    nodePort  : 30500
  selector:
    app: flaskapi
  type: NodePort